
# statusbar
set -g default-terminal "screen-256color"
set -g status-bg black
set -g status-fg white
set -g status on

setw -g automatic-rename on
set -g status-justify 'left'
set -g status-left ' ' # #S for session
#set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235]' 
setw -g window-status-format '#I #W' 
setw -g window-status-current-format '#[fg=colour222,bg=colour238] #I #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'
set-option -g status-right ' '
set-option -g status-position 'bottom'

# monitor activities in other windows
setw -g monitor-activity on
set -g visual-activity on

set-option -g destroy-unattached on
set-option -g renumber-windows on
set-option -g status-keys vi
set-option -g mode-keys vi
set-option -g monitor-bell on 


#Keybindings
bind-key -n M-q kill-pane
bind-key -n M-x kill-window
bind-key -n M-X kill-server

bind-key -n M-Enter run-shell "~/.config/tmux/tmux_split_pane.sh --smart"

# See: https://github.com/christoomey/vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind-key -n M-J swap-pane -D
bind-key -n M-K swap-pane -U

# Mouse controls
set -g mouse on

# window-naviation
set -g base-index 1
bind-key -n M-1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key -n M-2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key -n M-3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key -n M-4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key -n M-5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key -n M-6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key -n M-7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key -n M-8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind-key -n M-9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
bind-key -n M-0 if-shell 'tmux select-window -t :0' '' 'new-window -t :0'

bind-key -n M-m command-prompt -p "send pane to:" "if-shell 'tmux join-pane -t %1' '' 'break-pane -t %1'"
#bind-key -n M-! if-shell 'tmux join-pane -t 1' '' 'break-pane -t 1'

# Layout
bind-key -n M-Space next-layout 



# setup for Webapp-ims
bind-key -n M-i new-window -n Webapp-ims -c "$HOME/TU/WiSe-2019,20/BP/webapp-ims/packages/client" \;\
        split-window -h -t 0 -p 50 -c "$HOME/TU/WiSe-2019,20/BP/webapp-ims/packages/server" \;\
        split-window -v -t 1 -p 30 -c "$HOME/TU/WiSe-2019,20/BP/webapp-ims/packages/utils" \;\
        split-window -v -t 0 -p 30 -c "$HOME/TU/WiSe-2019,20/BP/webapp-ims/packages/migrations" \;\
        new-window -n running -c "$HOME/TU/WiSe-2019,20/BP/webapp-ims/packages/client" \;\
        split-window -h -t 0 -p 50 -c "$HOME/TU/WiSe-2019,20/BP/webapp-ims/packages/server" \;\
        send-keys -t 0 "npm run start" "Enter" \;\
        send-keys -t 1 "NODE_ENV=development node ./bin/main.js" "Enter" \;\
        last-window
 
# setup for next-survey 
bind-key -n M-n new-window -n Webapp-ims -c "$HOME/JSperts/next-survey/packages/client" \;\
        split-window -h -t 0 -p 50 -c "$HOME/JSperts/next-survey/packages/server" \;\
        split-window -v -t 1 -p 30 -c "$HOME/JSperts/next-survey/packages/utils" \;\
        split-window -v -t 0 -p 30 -c "$HOME/JSperts/next-survey/packages/migrations" \;\
        new-window -n Webapp-ims -c "$HOME/JSperts/next-survey/packages/widget" \;\
        split-window -h -t 0 -p 50 -c "$HOME/JSperts/next-survey/packages/data-generator" \;\
        new-window -n running -c "$HOME/JSperts/next-survey/packages/client" \;\
        split-window -h -t 0 -p 50 -c "$HOME/JSperts/next-survey/packages/server" \;\
        send-keys -t 0 "npm run start" "Enter" \;\
        send-keys -t 1 "NODE_ENV=development node ./bin/main.js" "Enter" \;\
        last-window \;\
        last-window
 
# setup for NLP4Web
bind-key -n M-w new-window -n NLP4Web -c "$HOME/TU/WiSe-2019,20/NLP/Tutorium" \;\
        send-keys -t 0 "source .venv/bin/activate && jupyter notebook" "Enter" \;\
 
#bind-key -n C-< split-window -h
#bind-key -n C-- split-window -v

